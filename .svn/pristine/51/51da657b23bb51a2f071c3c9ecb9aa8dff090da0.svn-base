<template>
  <div style="height:100%;" >
    <div style="height:50px;" class="appCenterTop" > 
      <span style="font-size:14px">业务类别：</span>
      <el-select style="width:85px" v-model="type" placeholder="请选择" @change="fetchData">
        <el-option
          v-for="item in companyKindList"
          :key="item.type"
          :label="item.typeName"
          :value="item.type">
        </el-option>
      </el-select>
    </div>
    <el-table :data="companyItemList" v-loading.body="listLoading" element-loading-text="玩命加载中……"  border fit highlight-current-row  stripe size="mini">
      <el-table-column label="项目名称"  align="center"  >
        <template slot-scope="scope">
          {{scope.row.itemName}}
        </template>
      </el-table-column>
      <el-table-column label="项目价格"  align="center"  >
        <template slot-scope="scope">
          {{(!scope.row.itemPrice) ? '0 元' : scope.row.itemPrice + ' 元'}}
        </template>
      </el-table-column>
      <el-table-column class-name="status-col" label="状态"  align="center" width="100">
        <template slot-scope="scope">
          <el-tag :type="scope.row.companyId | statusFilter">{{scope.row.companyId ? "已设置":"未设置"}}</el-tag>
        </template>
      </el-table-column>
     <el-table-column align="center" label="操作" class-name="small-padding fixed-width" width="280">
        <template slot-scope="scope">
          <el-button type="primary"  size="mini" @click="setItem(scope.row.itemCode)">设置</el-button>
        </template>
      </el-table-column>
    </el-table>
  </div>
</template>

<script>
import { getCompanyItemList } from '@/api/company/item/index'
import { sessionStorageTool } from '@/utils'
import { getCompanyKindList } from '@/api/company/kind/index'
export default {
  data() {
    return {
      companyItemList: [],
      companyKindList: [],
      listLoading: true,
      companyId: '',
      type: ''
    }
  },
  filters: {
    statusFilter(companyId) {
      if (!companyId) {
        return 'info'
      }
      return 'success'
    }
  },
  created() {
    this.$nextTick(function() {
      const { companyId } = sessionStorageTool.getSessionStorage('companyId')
      this.companyId = companyId
      this.selectCompanyKind()
    })
  },
  methods: {
    fetchData() {
      this.listLoading = true
      getCompanyItemList({ companyId: this.companyId, type: this.type }).then(response => {
        this.companyItemList = response.newList
        this.listLoading = false
      })
    },
    setItem(val) {
      this.$router.push({ path: 'ItemSet', query: { 'itemCode': val }})
    },
    selectCompanyKind() {
      getCompanyKindList({ pageNo: 1, pageSize: 100, companyId: this.companyId }).then(response => {
        this.companyKindList = response.page.records
        if (this.companyKindList.length > 0) {
          this.type = this.companyKindList[0].type
          this.fetchData()
        }
      })
    }
  }
}
</script>

