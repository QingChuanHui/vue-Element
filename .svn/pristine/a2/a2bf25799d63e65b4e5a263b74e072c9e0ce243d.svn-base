<template>
  <div class="useradd">
  <el-row>
    <el-col :span="23">
      <el-form :model="ruleForm" :rules="rules" ref="ruleForm" label-width="100px" class="demo-ruleForm"  size="mini" >
  
        <el-row>
          <el-col :span="10">
            <el-form-item label="机构名称" prop="officeName">
              <el-input placeholder="请输入内容" v-model="ruleForm.officeName" class="input-with-select" :disabled="true">
                <el-button @click="openOfficeDialog()" slot="append" icon="el-icon-search">选择</el-button>
              </el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row>
          <el-col :span="10">
            <el-form-item label="头像" prop="headImage">
              <el-upload
              :class="{disabled:uploadDisabled}"
              :action="action"
              :limit="1"
              :before-upload="beforeUpload"
              :on-success="onSuccess"
              list-type="picture-card"
              :on-preview="handlePictureCardPreview"
              :on-remove="handleRemove"
              :multiple="false"
              accept="image/gif,image/jpeg,image/jpg,image/png,image/svg"
              :file-list="imagelist">
                <i class="el-icon-plus"></i>
              </el-upload>
              <el-dialog :visible.sync="dialogVisible">
                <img width="100%" :src="dialogImageUrl" alt="">
              </el-dialog>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row>
          <el-col :span="10">
            <el-form-item label="姓名" prop="name">
              <el-input v-model="ruleForm.name"   ></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row>
        <el-col :span="10">
          <el-form-item label="登录编码" prop="loginName">
            <el-input v-model="ruleForm.loginName"></el-input>
          </el-form-item>
        </el-col>
        </el-row>

        <el-row>
        <el-col :span="10">
          <el-form-item label="密码" prop="password">
            <el-input v-model="ruleForm.password"></el-input>
          </el-form-item>
        </el-col>
        </el-row>

        <el-row>
        <el-col :span="10">
          <el-form-item prop="address" label="性别" >
           <el-select v-model="ruleForm.sex" placeholder="请选择">
              <el-option
                v-for="item in sexList"
                :key="item.value"
                :label="item.label"
                :value="item.value">
              </el-option>
            </el-select>
          </el-form-item></el-col>
        </el-row>

        <el-row>
          <el-col :span="10">
            <el-form-item prop="adminName" label="手机号" >
              <el-input v-model="ruleForm.mobile"  ></el-input>
            </el-form-item>
          </el-col>
        </el-row>
       <el-row>
          <el-col :span="10">
             <el-form-item label="禁用">
                <el-switch v-model="ruleForm.useFlag" :active-value="1" :inactive-value="0"></el-switch>
             </el-form-item>
          </el-col>
        </el-row> 
        <el-row>
          <el-col :span="10">
        <el-form-item label="备注" prop="remarks">
          <el-input type="textarea" v-model="ruleForm.remarks"></el-input>
        </el-form-item>
          </el-col>
        </el-row>

        <el-form-item v-if="flag!=0">
          <el-button type="primary" @click="submitForm('ruleForm')">保存</el-button>
          <el-button @click="resetForm('ruleForm')">重置</el-button>
        </el-form-item>
      </el-form>
    </el-col>
  </el-row>

    <el-dialog title="组织机构" :visible.sync="dialogTableVisible">
      <el-input
        placeholder="输入关键字进行过滤"
        v-model="filterText">
      </el-input>
      <el-tree
        class="filter-tree"
        :data="officeTree"
        :props="defaultProps"
        default-expand-all
        highlight-current
        :filter-node-method="filterNode"
        @node-click="handleNodeClick"
        ref="tree">
      </el-tree>
      <div slot="footer" class="dialog-footer">
        <el-button @click="dialogTableVisible = false" v-loading.fullscreen.lock="fullscreenLoading">取 消</el-button>
        <el-button type="primary" @click="selectOffice">确 定</el-button>
      </div>
    </el-dialog>

  </div>
</template>

<script>
  import { loginNameUniqueness, selectUser, saveUser, updateUser } from '@/api/system/user/index'
  import { getOfficeTreeData } from '@/api/system/office/index'
  export default {
    watch: {
      filterText(val) {
        this.$refs.tree.filter(val)
      }
    },
    computed: {
      uploadDisabled: function() {
        return this.imagelist.length > 0
      }
    },
    data() {
      var validateLoginName = (rule, value, callback) => {
        if (value === '') {
          callback(new Error('请输入登录编码'))
        }
        if (this.flag === 2) {
          this.flagUpdate = true
        }
        // 异步检查loginName 是否允许重复
        loginNameUniqueness({ 'loginName': value, 'flag': this.flagUpdate }).then(response => {
          if (response.new) {
            callback(new Error('该账号已经被使用'))
          } else {
            callback()
          }
        })
      }
      return {
        // 图片的属性
        dialogVisible: false,
        dialogImageUrl: '',
        imagelist: [],
        action: process.env.BASE_API + '/v1/upload',
        picUrl: process.env.BASE_API,
        model: {},
        sexList: [{ value: '男', label: '男' }, { value: '女', label: '女' }],
        flagUpdate: false,
        id: '',
        flag: 0,
        dialogTableVisible: false,
        fullscreenLoading: false,
        filterText: '',
        treeSelectData: {
          treeKey: '',
          treeValue: ''
        },
        officeTree: [],
        defaultProps: {
          children: 'children',
          label: 'label'
        },
        ruleForm: {
          id: '',
          name: '',
          password: '',
          loginName: '',
          sex: '',
          mobile: '',
          headImage: '',
          officeName: '',
          remarks: '',
          useFlag: 0,
          officeId: ''
        },
        rules: {
          name: [
            { required: true, message: '请输入姓名', trigger: 'blur' },
            { min: 0, max: 20, message: '最大 64个字符', trigger: 'blur' }
          ],
          password: [
            { required: true, message: '请输入密码', trigger: 'blur' },
            { min: 0, max: 20, message: '最大 64个字符', trigger: 'blur' }
          ],
          loginName: [
            { validator: validateLoginName, trigger: 'blur' }
          ]
        }
      }
    },
    mounted: function() {
      this.$nextTick(function() {
        // flag==0 表示查看 flag=1表示需改
        this.id = this.$route.query.id
        if (this.id) {
          this.load()
        }
        this.flag = Number.parseInt(this.$route.query.flag)
        // 获取机构树形的数据
        this.getTreeData()
      })
    },
    methods: {
      submitForm(formName) {
        // 提交form
        this.$refs[formName].validate((valid) => {
          if (valid) {
            // 新增 flag===1
            if (this.flag === 1) {
              saveUser(this.ruleForm).then(response => {
                console.log('ok')
                this.$router.push({ path: '/system/User' })
              })
            // 修改 flag===2
            } else if (this.flag === 2) {
              updateUser(this.ruleForm).then(response => {
                console.log('ok')
                this.$router.push({ path: '/system/User' })
              })
            } else {
              console.log('error submit!!:' + this.flag)
            }
          } else {
            console.log('error submit!!')
            return false
          }
        })
      },
      resetForm(formName) {
        // 重置表单
        this.$refs[formName].resetFields()
      },
      openOfficeDialog() {
        // 打开机构树形dialog
        this.dialogTableVisible = true
      },
      filterNode(value, data) {
        // 对树节点进行筛选时执行的方法，返回 true 表示这个节点可以显示，返回 false 则表示这个节点会被隐藏
        if (!value) return true
        return data.label.indexOf(value) !== -1
      },
      openFullScreen() {
        this.fullscreenLoading = true
        setTimeout(() => {
          this.fullscreenLoading = false
        }, 2000)
      },
      load() {
        selectUser({ 'id': this.id }).then(response => {
          this.ruleForm = response.new
          if (this.ruleForm.headImage) {
            this.imagelist.push({ url: this.picUrl + this.ruleForm.headImage })
          }
        })
      },
      getTreeData() {
        getOfficeTreeData().then(response => {
          this.officeTree = response.newList
          console.log(this.officeTree)
        })
      },
      selectOffice() {
        // 点击确定以后先关闭当前界面
        this.dialogTableVisible = false
        if (this.treeSelectData.treeKey) {
          this.ruleForm.officeId = this.treeSelectData.treeKey
          this.ruleForm.officeName = this.treeSelectData.treeValue
        }
      },
      handleNodeClick(data) {
        this.treeSelectData.treeKey = data.id
        this.treeSelectData.treeValue = data.label
      },
      beforeUpload: function(file) {
        console.log('beforeupload')
      },
      onSuccess: function(response, file, fileList) {
        console.log('success')
        console.log(response)
        this.ruleForm.headImage = response.url
        this.imagelist.push(file)
      },
      handleRemove(file, fileList) {
        console.log('remove')
        this.imagelist = []
      },
      handlePictureCardPreview(file) {
        console.log('preview')
        this.dialogImageUrl = file.url
        this.dialogVisible = true
      }
    }
  }
</script>

<style lang="scss">
.useradd{
  .line{
    text-align: center;
  }
  .disabled .el-upload--picture-card {
        display: none;
  }
}
 
</style>

